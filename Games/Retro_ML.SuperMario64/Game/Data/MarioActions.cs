namespace Retro_ML.SuperMario64.Game.Data;
internal static class MarioActions
{
    private struct Action
    {
        public Action(uint address, string name, bool isGrounded = false, bool isSwimming = false, bool isDeath = false)
        {
            Address = address;
            Name = name;

            IsGrounded = isGrounded;
            IsSwimming = isSwimming;
            IsDeath = isDeath;
        }

        public readonly uint Address;
        public readonly string Name;

        public readonly bool IsGrounded;
        public readonly bool IsSwimming;
        public readonly bool IsDeath;
    }

    private static readonly List<Action> actionList = new()
    {
        new(0x0C400201, "standing", isGrounded: true),
        new(0x0C400202, "start sleeping", isGrounded: true),
        new(0x0C000203, "sleeping", isGrounded: true),
        new(0x0C000204, "waking up", isGrounded: true),
        new(0x0C400205, "panting", isGrounded: true),
        new(0x0C400209, "standing against wall", isGrounded: true),
        new(0x0C40020A, "coughing", isGrounded: true),
        new(0x0C40020B, "shivering", isGrounded: true),
        new(0x0C000227, "first person view", isGrounded: true),
        new(0x0C00023D, "stop skidding", isGrounded: true),
        new(0x04000440, "walking/running", isGrounded: true),
        new(0x00000443, "turning around (1/2)", isGrounded: true),
        new(0x00000444, "turning around (2/2)", isGrounded: true),
        new(0x04000445, "skidding", isGrounded: true),
        new(0x0400044A, "decelerating", isGrounded: true),
        new(0x04008448, "crawling", isGrounded: true),
        new(0x0C008223, "start crawling", isGrounded: true),
        new(0x0C008224, "stop crawling", isGrounded: true),
        new(0x00800380, "punch / breakdance", isGrounded: true),
        new(0x00800457, "moving punch / breakdance", isGrounded: true),
        new(0x03000880, "single jump"),
        new(0x04000470, "single jump landing (1/2)", isGrounded: true),
        new(0x0C000230, "single jump landing (2/2)", isGrounded: true),
        new(0x03000881, "double jump"),
        new(0x04000472, "double jump landing (1/2)", isGrounded: true),
        new(0x0C000231, "double jump landing (2/2)", isGrounded: true),
        new(0x01000882, "triple jump"),
        new(0x04000478, "triple jump landing (1/2)", isGrounded: true),
        new(0x0800023A, "triple jump landing (2/2)", isGrounded: true),
        new(0x01000883, "backflip"),
        new(0x03000885, "steep jump"),
        new(0x0400047A, "backflip landing (1/2)", isGrounded: true),
        new(0x0800022F, "backflip landing (2/2)", isGrounded: true),
        new(0x03000886, "pole jump / wall kick"),
        new(0x01000887, "sideflip"),
        new(0x04000473, "sideflip landing (1/2)", isGrounded: true),
        new(0x0C000233, "sideflip landing (2/2)", isGrounded: true),
        new(0x03000888, "long jump"),
        new(0x00000479, "long jump landing (1/2)", isGrounded: true),
        new(0x0800023B, "long jump landing (2/2)", isGrounded: true),
        new(0x01000889, "water jump"),
        new(0x0100088C, "freefall"),
        new(0x04000471, "freefall landing (1/2)", isGrounded: true),
        new(0x0C000232, "freefall landing (2/2)", isGrounded: true),
        new(0x108008A4, "twirling"),
        new(0x18800238, "twirl landing", isGrounded: true),
        new(0x008008A9, "ground pound"),
        new(0x0080023C, "ground pound landing", isGrounded: true),
        new(0x000008A7, "air hitting wall"),
        new(0x018008AC, "air kick"),
        new(0x030008AF, "special triple jump"),
        new(0x08000239, "lava boost landing", isGrounded: true),
        new(0x00000476, "quicksand jump landing", isGrounded: true),
        new(0x000004A8, "riding owl"),
        new(0x00000050, "start sliding", isGrounded: true),
        new(0x0300088E, "air sitting"),
        new(0x00840452, "ground sitting", isGrounded: true),
        new(0x0C00023E, "stop sitting", isGrounded: true),
        new(0x0188088A, "air dive"),
        new(0x008C0453, "sliding", isGrounded: true),
        new(0x00880456, "ground dive"),
        new(0x00000386, "stop sliding/diving", isGrounded: true),
        new(0x0C008220, "crouching", isGrounded: true),
        new(0x0C008221, "start crouching", isGrounded: true),
        new(0x0C008222, "stop crouching", isGrounded: true),
        new(0x04808459, "crouch sliding", isGrounded: true),
        new(0x010008A6, "forward rollout"),
        new(0x010008AD, "backward rollout"),
        new(0x018008AA, "slide kick"),
        new(0x0080045A, "slide kick sliding", isGrounded: true),
        new(0x08000225, "stop slide kicking", isGrounded: true),
        new(0x0800034B, "ledge grab"),
        new(0x0000054C, "slow ledge get up (1/2)"),
        new(0x0000054D, "slow ledge get up (2/2)"),
        new(0x0000054E, "climb down onto ledge"),
        new(0x0000054F, "quick ledge get up"),
        new(0x08100340, "holding pole"),
        new(0x00100341, "short pole grab"),
        new(0x00100342, "long pole grab"),
        new(0x00100343, "climbing pole"),
        new(0x00100344, "handstand transition"),
        new(0x00100345, "handstand"),
        new(0x0300088D, "handstand jump"),
        new(0x08200348, "start hanging"),
        new(0x00200349, "hanging"),
        new(0x0020054A, "swinging"),
        new(0x20810446, "shell riding on ground", isGrounded: true),
        new(0x0281089A, "shell riding jump"),
        new(0x0081089B, "shell riding freefall"),
        new(0x00001371, "in cannon"),
        new(0x00880898, "cannon shot"),
        new(0x00001336, "start teleporting", isGrounded: true),
        new(0x00001337, "stop teleporting", isGrounded: true),
        new(0x03000894, "flying triple jump"),
        new(0x10880899, "flying"),
        new(0x1008089C, "vertical wind"),
        new(0x0002020D, "in quicksand", isGrounded: true),
        new(0x0002020E, "mystery action"),
        new(0x00020226, "shockwave bouncing"),
        new(0x00020338, "shocked"),
        new(0x00020339, "squished", isGrounded: true),
        new(0x0002033A, "head stuck in ground", isGrounded: true),
        new(0x0002033B, "butt stuck in ground", isGrounded: true),
        new(0x0002033C, "feet stuck in ground", isGrounded: true),
        new(0x00020370, "grabbed / heaved start"),
        new(0x10020372, "twirling in tornado"),
        new(0x00020449, "burning on ground", isGrounded: true),
        new(0x00020460, "hard backward knockback", isGrounded: true),
        new(0x00020461, "hard forward knockback", isGrounded: true),
        new(0x00020462, "medium backward knockback", isGrounded: true),
        new(0x00020463, "medium forward knockback", isGrounded: true),
        new(0x00020464, "soft backward knockback", isGrounded: true),
        new(0x00020465, "soft forward knockback", isGrounded: true),
        new(0x00020466, "ground bonk", isGrounded: true),
        new(0x00020467, "death exit landing", isGrounded: true),
        new(0x010208B0, "backward air knockback"),
        new(0x010208B1, "forward air knockback"),
        new(0x010208B2, "forward death air"),
        new(0x010208B3, "backward death air"),
        new(0x010208B4, "fire bounce"),
        new(0x010208B5, "fire freefall"),
        new(0x010208B6, "soft bonk / let go"),
        new(0x010208B7, "lava boost"),
        new(0x010208B8, "blown away"),
        new(0x010208BD, "thrown"),
        new(0x010208BE, "heaved"),
        new(0x00021311, "standing death", isGrounded: true, isDeath: true),
        new(0x00021312, "quicksand death", isDeath: true),
        new(0x00021313, "electrocution"),
        new(0x00021314, "suffocation", isDeath: true),
        new(0x00021315, "death on stomach", isGrounded: true, isDeath: true),
        new(0x00021316, "death on back", isGrounded: true, isDeath: true),
        new(0x00021317, "eaten by bubba", isDeath: true),
        new(0x300222E3, "sucked into whirlpool", isDeath: true),
        new(0x380022C0, "in water", isSwimming: true),
        new(0x300022C2, "water action end", isSwimming: true),
        new(0x300032C4, "drowning", isDeath: true),
        new(0x300222C5, "water backward knockback", isSwimming: true),
        new(0x300222C6, "water forward knockback", isSwimming: true),
        new(0x300032C7, "water death", isDeath: true, isSwimming: true),
        new(0x300222C8, "water shocked", isSwimming: true),
        new(0x300024D0, "swim (1/2)", isSwimming: true),
        new(0x300024D1, "swim (2/2)", isSwimming: true),
        new(0x300024D2, "flutterkick"),
        new(0x300024E1, "water grab", isSwimming: true),
        new(0x300022E2, "water plunge", isSwimming: true),
        new(0x080042F0, "metal water standing", isGrounded: true),
        new(0x000044F2, "metal water walking", isGrounded: true),
        new(0x000042F4, "metal water falling"),
        new(0x000042F6, "metal water fall landing", isGrounded: true),
        new(0x000044F8, "metal water jump"),
        new(0x000044FA, "metal water jump landing", isGrounded: true),
        new(0x00000051, "start sliding with an object", isGrounded: true),
        new(0x08000206, "panting with an object", isGrounded: true),
        new(0x08000207, "standing with an object", isGrounded: true),
        new(0x08000208, "standing with a heavy object", isGrounded: true),
        new(0x00000383, "picking up an object", isGrounded: true),
        new(0x00000385, "stop sliding with an object", isGrounded: true),
        new(0x00000387, "placing down an object", isGrounded: true),
        new(0x00000390, "picking up Bowser", isGrounded: true),
        new(0x00000391, "holding Bowser", isGrounded: true),
        new(0x00000392, "releasing Bowser", isGrounded: true),
        new(0x00000442, "walking with an object", isGrounded: true),
        new(0x0000044B, "decelerating with an object", isGrounded: true),
        new(0x030008A0, "jump with an object"),
        new(0x00000474, "jump landing with an object (1/2)", isGrounded: true),
        new(0x08000234, "jump landing with an object (2/2)", isGrounded: true),
        new(0x010008A1, "freefall with an object"),
        new(0x00000475, "freefall landing with an object (1/2)", isGrounded: true),
        new(0x08000235, "freefall landing with an object (2/2)", isGrounded: true),
        new(0x010008A2, "air sitting with an object"),
        new(0x00840454, "ground sitting with an object", isGrounded: true),
        new(0x0800043F, "stop sitting with an object", isGrounded: true),
        new(0x008C0455, "sliding with an object", isGrounded: true),
        new(0x80000588, "ground throw", isGrounded: true),
        new(0x830008AB, "air throw"),
        new(0x80000A36, "air throw landing", isGrounded: true),
        new(0x00000477, "quicksand jump landing with an object", isGrounded: true),
        new(0x00000447, "walking with a heavy object", isGrounded: true),
        new(0x80000589, "throwing a heavy object", isGrounded: true),
        new(0x000008AE, "crazy box hopping"),
        new(0x300024D6, "water shell swimming", isSwimming: true),
        new(0x300024E0, "water throw", isSwimming: true),
        new(0x380022C1, "in water with an object", isSwimming: true),
        new(0x300022C3, "water action end with an object", isSwimming: true),
        new(0x300024D3, "swim with an object (1/2)", isSwimming: true),
        new(0x300024D4, "swim with an object (2/2)", isSwimming: true),
        new(0x300024D5, "flutterkick with an object"),
        new(0x010008A3, "water jump with an object"),
        new(0x080042F1, "metal water standing with an object", isGrounded: true),
        new(0x000044F3, "metal water walking with an object", isGrounded: true),
        new(0x000042F5, "metal water falling with an object"),
        new(0x000042F7, "metal water fall landing with an object", isGrounded: true),
        new(0x000044F9, "metal water jump with an object"),
        new(0x000044FB, "metal water jump landing with an object", isGrounded: true),
        new(0x00000000, "uninitialized"),
        new(0x00001300, "disappeared"),
        new(0x04001301, "intro cutscene"),
        new(0x00001302, "star dance ground (exits)", isGrounded: true),
        new(0x00001307, "star dance ground (doesn't exit)", isGrounded: true),
        new(0x00001303, "star dance water", isSwimming: true),
        new(0x00001904, "falling with star"),
        new(0x20001305, "unlocking door text", isGrounded: true),
        new(0x20001306, "text / cutscene", isGrounded: true),
        new(0x00001308, "reading text (sign)", isGrounded: true),
        new(0x0000130A, "waiting for text", isGrounded: true),
        new(0x0000130F, "free movement", isGrounded: true),
        new(0x00001319, "credits"),
        new(0x0000131A, "waving", isGrounded: true),
        new(0x00001320, "pulling door", isGrounded: true),
        new(0x00001321, "pushing door", isGrounded: true),
        new(0x00001322, "appearing from door", isGrounded: true),
        new(0x00001325, "spinning enter landing"),
        new(0x00001327, "star exit landing"),
        new(0x0000132E, "unlocking key door", isGrounded: true),
        new(0x0000132F, "unlocking door", isGrounded: true),
        new(0x00001331, "entering star door", isGrounded: true),
        new(0x00001333, "neutral enter landing"),
        new(0x0000133D, "putting on hat", isGrounded: true),
        new(0x00001909, "grand star cutscene"),
        new(0x00001918, "Peach cutscene"),
        new(0x00001923, "exit warp pipe"),
        new(0x00001924, "spinning enter"),
        new(0x00001926, "star exit sideways"),
        new(0x00001928, "death exit sideways"),
        new(0x00001929, "death exit freefall"),
        new(0x0000192A, "death exit downwards"),
        new(0x0000192B, "star exit upwards"),
        new(0x0000192C, "death exit upwards"),
        new(0x0000192D, "star exit downwards"),
        new(0x00001932, "neutral enter"),
        new(0x00001934, "BBH enter jump"),
        new(0x00001535, "BBH enter spinning"),
    };

    private static readonly Dictionary<uint, Action> ACTIONS = actionList.ToDictionary(a => a.Address);

    public static bool IsGrounded(uint action) => GetAction(action).IsGrounded;
    public static bool IsSwimming(uint action) => GetAction(action).IsSwimming;
    public static bool Died(uint action) => GetAction(action).IsDeath;

    public static string GetActionName(uint action) => GetAction(action).Name;
    private static Action GetAction(uint action) => ACTIONS.TryGetValue(action, out var val) ? val : new Action(action, action.ToString());
}
